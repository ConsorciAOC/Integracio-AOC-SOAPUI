<envio>							
	<version>1.0.0</version>						
	<anuncios>						
		<remitente>					
		   <nodoRemitente idDir3="A99999999" nivel="1">COMUNIDADES AUTONOMAS</nodoRemitente>					
		   <nodoRemitente idDir3="A09002970" nivel="2">GENERALITAT DE CATALUNYA</nodoRemitente>					
		   <nodoRemitente idDir3="A09018799" nivel="3">DEPARTAMENTO DE GOBERNACION, ADMINISTRACIONES PÚBLICAS Y VIVIENDA</nodoRemitente>					
		   <nodoRemitente idDir3="A09018933" nivel="4">CONSORCI ADMINISTRACIÓ OBERTA DE CATALUNYA</nodoRemitente>					
		</remitente>					
		<fechaPub>2018-01-23</fechaPub>					
		<infPub>					
			<email>Autoritas_Informa@bcn.cat</email>				
		</infPub>					
		<anuncio>					
			<emisor>				
				<nodoEmisor idDir3="LA9999999" nivel="1">ENTIDADES LOCALES</nodoEmisor>			
				<nodoEmisor idDir3="L01080193" nivel="2">Ayuntamiento de Barcelona</nodoEmisor>			
			</emisor>				
			<metadatos>				
				<id>1</id>			
				<formPub>E</formPub>			
				<datosPersonales>S</datosPersonales>			
				<materias>			
					<materia idMat="28">URBANISMO  Y HACIENDA</materia>		
				</materias>			
				<procedimiento plural="N">de notificación de resoluciones sancionadoras </procedimiento>			
			</metadatos>				
			<contenido>				
				<texto content-type="application/xml">			
					<p class="titulo">Anuncio de notificación de resoluciones sancionadoras </p>		
					<p></p>		
					<p>Primero. - De acuerdo con lo que prevén los artículos 44 y 45 de la Ley 39/2015, de 1 de octubre, de Procedimiento administrativo común de las administraciones públicas, se notifica a las personas que se relacionan a continuación las sanciones que les han sido impuestas. Estos acuerdos han sido objeto de los intentos de notificación previstos legalmente, sin que se hayan podido notificar. </p><p></p><p>Segundo. - Contra esta resolución, que no pone fin a la vía administrativa, se puede interponer recurso de alzada ante la Alcaldía, en el plazo de un mes a contar desde el día siguiente de la recepción de la publicación de este anuncio. El recurso de alzada se entenderá desestimado cuándo no haya recaído resolución en el plazo de tres meses a contar desde su presentación. Contra la desestimación expresa del recurso de alzada, los interesados podrán interponer recurso contencioso-administrativo ante los juzgados de la provincia de Barcelona en el plazo de dos meses contadores desde el día siguiente de la recepción de la notificación. No obstante, en el caso de desestimación presunta del recurso de alzada, el plazo será de seis meses desde el día siguiente del día en que el referido recurso se entienda desestimado. Igualmente, las personas interesadas pueden interponer cualquier otro recurso que consideren conveniente para la defensa de sus derechos.</p><p></p><p>Tercero. - Asimismo, los interesados podrán proceder al pago del importe de las sanciones que le hayan sido impuestas en el plazo de un mes a partir del día siguiente en la publicación de este anuncio. </p><p></p><p>Cuarto. - Los expedientes y los documentos de pago se pueden consultar en las dependencias municipales de los Departamentos de Licencias e Inspección de los Distritos que se indican de acuerdo con el código de la Dependencia que figura en la relación. El horario de atención al público de cada Dependencia se puede consultar mediante el teléfono de atención ciudadana 010.</p><p></p>		
					<p></p>		
					<table><caption/><colgroup><col/><col/><col/><col/><col/><col/></colgroup><thead><tr><th>CÓDIGO</th><th>DEPENDENCIA</th><th>EMPLAZAMIENTO</th><th>CÓDIGO</th><th>DEPENDENCIA</th><th>EMPLAZAMIENTO</th></tr></thead><tbody><tr><td>01</td><td>DISTRITO DE CIUTAT VELLA</td><td>RAMALLERES, 17</td><td>06</td><td>DISTRITO DE GRÀCIA </td><td>RIUS I TAULET 2</td></tr><tr><td>02</td><td>DISTRITO DEL EIXAMPLE</td><td>ARAGÓ 311</td><td>07</td><td>DISTRITO DE HORTA-GUINARDÓ</td><td>LEPANT 373-387</td></tr><tr><td>03</td><td>DISTRITO DE  SANTS-MONTJUÏC</td><td>MUNTADAS 5-33</td><td>08</td><td>DISTRITO DE NOU BARRIS</td><td>PI I MOLIST 133</td></tr><tr><td>04</td><td>DISTRITO DE LAS CORTS</td><td>PL COMES 18</td><td>09</td><td>DISTRITO DE SANT ANDREU</td><td>SEGADORS 2</td></tr><tr><td>05</td><td>DISTRITO DE SARRIÀ-SANT GERVASI</td><td>ANGLI 31</td><td>10</td><td>DISTRITO DE SANT MARTÍ</td><td>VALENTÍ ALMIRALL 1</td></tr></tbody></table>		
					<p></p>		
					<p>Relación de ordenanzas, leyes y reglamentos que pueden aparecer en el siguiente listado:</p>		
					<p></p>		
					<table><caption/><colgroup><col/><col/></colgroup><thead><tr><th>CODIGO</th><th>NORMATIVA</th></tr></thead><tbody><tr><td>(OMA)</td><td>Ordenanza del Medio Ambiente de Barcelona</td></tr><tr><td>(OPU)</td><td>Ordenanza del Paisaje Urbano de Barcelona</td></tr><tr><td>(ORCPCI)</td><td>Ordenanza municipal de condiciones de protección contra incendios de Barcelona</td></tr><tr><td>(OMAIIAA)</td><td>Ordenanza Municipal de las Actividades y de Intervención Integral de la Administración Ambiental de Barcelona</td></tr><tr><td>(LRAEPAR)</td><td>Ley de Regulación Administrativa de los Espectáculos Públicos y las Actividades Recreativas</td></tr><tr><td>(OPTVA)</td><td>Ordenanza de Protección, Tenencia y Venta de Animales de Barcelona</td></tr><tr><td>(OVEP)</td><td>Ordenanza de las Vías y los Espacios Públicos de Barcelona</td></tr><tr><td>(OT)</td><td>Ordenanza de Terrazas de Barcelona</td></tr><tr><td>(OEA)</td><td>Ordenanza de Establecimientos y centros de comercio Alimentarios de Barcelona</td></tr><tr><td>(OCVV)</td><td>Ordenanza de Circulación de Peatones y Vehículos de Barcelona</td></tr><tr><td>(OMAECP)</td><td>Ordenanza Municipal de las Actividades y de los Establecimientos de Concurrencia Pública de Barcelona</td></tr></tbody></table>		
					<p class="page-break"></p>		
					<table><caption/><colgroup><col/><col class="index:EXP"/><col/><col class="index:NOMBRE"/><col class="index:NIF"/><col/><col/><col/><col/></colgroup><thead><tr><th>Código</th><th>Num. Expediente</th><th>Procedimiento</th><th>Nombre</th><th>Nif</th><th>Dirección</th><th>Fecha</th><th>Importe</th><th>Artículo Infringido</th></tr></thead><tbody><tr><td>2</td><td>AUT-02-2010-01478</td><td>SAB9741761</td><td>pompiu piu pou</td><td>88664422C</td><td>CCasp 100</td><td>22/07/10</td><td></td><td>49.1.b) de la Llei 11/2009 (LRAEPAR)</td></tr></tbody></table>		
					<p></p>		
					<p class="pieFirma" />		
				</texto>			
				<pieFirma>			
					<lugar>Barcelona</lugar>		
					<fecha>2017-01-12</fecha>		
					<firmante>Dirección de Servicios de Licencias y Espacio Público</firmante>		
				</pieFirma>			
			</contenido>				
			<contenidoCoof>				
				<texto content-type="application/xml">			
					<p class="titulo">Anunci de notificació de resolucions sancionadores </p>		
					<p></p>		
					<p>Primer. - D'acord amb el que preveuen els articles 44 i 45 de la Llei 39/2015, d'1 d'octubre, de Procediment administratiu comú de les administracions públiques, es notifica a les persones que es relacionen a continuació les sancions que els han estat imposades Aquests acords han estat objecte dels intents de notificació previstos legalment, sense que s'hagin pogut notificar.</p><p></p><p>Segon. - Contra aquesta resolució, que no posa fi a la via administrativa, es pot interposar recurs d'alçada davant l'Alcaldia, en el termini d'un mes a comptar des de l'endemà de la recepció de la publicació d'aquest anunci. El recurs d'alçada s'entendrà desestimat quan no hagi recaigut resolució en el termini de tres mesos a comptar des de la seva presentació. Contra la desestimació expressa del recurs d'alçada, els interessats podran interposar recurs contenciós-administratiu davant els jutjats de la província de Barcelona en el termini de dos mesos comptadors des del dia següent de la recepció de la notificació. No obstant, en el cas de desestimació presumpta del recurs d'alçada, el termini serà de sis mesos des de l'endemà del dia en què el referit recurs s'entengui desestimat. Igualment, les persones interessades poden interposar qualsevol altre recurs que considerin convenient per a la defensa dels seus drets.</p><p></p><p>Tercer. - Així mateix, els interessats podran procedir al pagament de l'import de les sancions que li hagin estat imposades en el termini d'un mes a partir de l'endemà a la publicació d'aquest anunci. </p><p></p><p>Quart. - Els expedients i els documents de pagament es poden consultar a les dependències municipals dels Departaments de Llicències i Inspecció dels Districtes que s'indiquen d'acord amb el codi de la Dependència que figura a la relació. L'horari d'atenció al públic de cada Dependència es pot consultar mitjançant el telèfon d'atenció ciutadana 010.</p><p></p>		
					<p></p>		
					<table><caption/><colgroup><col/><col/><col/><col/><col/><col/></colgroup><thead><tr><th>CODI</th><th>DEPENDÈNCIA</th><th>EMPLAÇAMENT</th><th>CODI</th><th>DEPENDÈNCIA</th><th>EMPLAÇAMENT</th></tr></thead><tbody><tr><td>01</td><td>DISTRICTE DE CIUTAT VELLA</td><td>RAMALLERES, 17</td><td>06</td><td>DISTRICTE DE GRÀCIA </td><td>RIUS I TAULET 2</td></tr><tr><td>02</td><td>DISTRICTE DEL EIXAMPLE</td><td>ARAGÓ 311</td><td>07</td><td>DISTRICTE DE HORTA-GUINARDÓ</td><td>LEPANT 373-387</td></tr><tr><td>03</td><td>DISTRICTE DE  SANTS-MONTJUÏC</td><td>MUNTADAS 5-33</td><td>08</td><td>DISTRICTE DE NOU BARRIS</td><td>PI I MOLIST 133</td></tr><tr><td>04</td><td>DISTRICTE DE LAS CORTS</td><td>PL COMES 18</td><td>09</td><td>DISTRICTE DE SANT ANDREU</td><td>SEGADORS 2</td></tr><tr><td>05</td><td>DISTRICTE DE SARRIÀ-SANT GERVASI</td><td>ANGLI 31</td><td>10</td><td>DISTRICTE DE SANT MARTÍ</td><td>VALENTÍ ALMIRALL 1</td></tr></tbody></table>		
					<p></p>		
					<p>Relació d'ordenances, lleis i reglaments que poden aparèixer al següent llistat: </p>		
					<p></p>		
					<table><caption/><colgroup><col/><col/><col/><col/></colgroup><thead><tr><th>CODI</th><th>NORMATIVA</th><th>CODI</th><th>NORMATIVA</th></tr></thead><tbody><tr><td>LEAE</td><td>Llei 11/2009 Policia d'Espectacles</td><td>OME</td><td>Ordenances Metropolitanes d'Edificació</td></tr><tr><td>LGOP</td><td>Llei 10/99 sobre Gossos Perillosos</td><td>OPU</td><td>Ordenança del Passatge Urbà de Barcelona</td></tr><tr><td>OECP</td><td>Ordenança d'Establiments de Concurrència Pública</td><td>ORME</td><td>Ordenança de Rehabilitació i Millores de l' Eixample</td></tr><tr><td>OEP</td><td>Ordenança d'Establiments de venda d'articles de Pirotècnia</td><td>OUVP</td><td>Ordenança d'Ús de les Vies i Espais Públics</td></tr><tr><td>OMA</td><td>Ordenança del Medi Ambient Urbà</td><td>CONV</td><td>Ordenança de mesures per fomentar i garantir la convivència ciutadana a l'espai públic de Barcelona.</td></tr></tbody></table>		
					<p></p>		
					<p class="page-break"></p>		
					<table><caption/><colgroup><col/><col class="index:EXP"/><col/><col class="index:NOMBRE"/><col class="index:NIF"/><col/><col/><col/><col/></colgroup><thead><tr><th>Codi</th><th>Num. Expedient</th><th>Procediment</th><th>Nom</th><th>Nif</th><th>Adreça</th><th>Data</th><th>Import</th><th>Article Infringit</th></tr></thead><tbody><tr><td>2</td><td>AUT-02-2010-01478</td><td>SAB9741761</td><td>pompiu piu pou</td><td>88664422C</td><td>CCasp 100</td><td>22/07/10</td><td></td><td>49.1.b) de la Llei 11/2009 (LRAEPAR)</td></tr></tbody></table>		
					<p></p>		
					<p class="pieFirma" />		
				</texto>			
			</contenidoCoof>				
		</anuncio>					
	</anuncios>						
</envio>